/* CSS Selectors
A CSS selector selects the HTML element(s) you want to style.

CSS Selectors
CSS selectors are used to "find" (or select) the HTML elements you want to style.

We can divide CSS selectors into five categories:

Simple selectors (select elements based on name, id, class)
Combinator selectors (select elements based on a specific relationship between them)
Pseudo-class selectors (select elements based on a certain state)
Pseudo-elements selectors (select and style a part of an element)
Attribute selectors (select elements based on an attribute or attribute value) */


/* CSS Combinators
A combinator is something that explains the relationship between the selectors.

A CSS selector can contain more than one simple selector. Between the simple selectors, we can include a combinator.

There are four different combinators in CSS:

descendant selector (space)
child selector (>)
adjacent sibling selector (+)
general sibling selector (~) */

/* Descendant Selector
The descendant selector matches all elements that are descendants of a specified element.

The following example selects all <p> elements inside <div> elements:  */

div p
{
    background-color:yellow;
}

/* Child Selector (>)
The child selector selects all elements that are the children of a specified element.

The following example selects all <p> elements that are children of a <div> element: */

pre > p
{
    background-color: brown;
}


/* Adjacent Sibling Selector (+)
The adjacent sibling selector is used to select an element that is directly after another specific element.

Sibling elements must have the same parent element, and "adjacent" means "immediately following". */

span+p
{
    background-color: aqua;
}

/* General Sibling Selector (~)
The general sibling selector selects all elements that are next siblings of a specified element. */

h3~p
{
    background-color: blueviolet;
}

/* CSS Pseudo-classes


What are Pseudo-classes?
A pseudo-class is used to define a special state of an element.

For example, it can be used to:

Style an element when a user mouses over it
Style visited and unvisited links differently
Style an element when it gets focus */

/* Syntax
The syntax of pseudo-classes:

selector:pseudo-class {
  property: value;
} */

/* unvisited link */
a:link {
    color: #FF0000;
  }
  
  /* visited link */
  a:visited {
    color: #00FF00;
  }
  
  /* mouse over link */
  a:hover {
    color: #FF00FF;
  }
  
  /* selected link */
  a:active {
    color: #0000FF;
  }

  input:focus
  {
   background-color: yellow;
   color:#FF0000;
  }
  
  input.inpt:focus
  {
    background-color: pink;
    color:blue;
  }

/* CSS Pseudo-elements
What are Pseudo-Elements?
A CSS pseudo-element is used to style specified parts of an element.

For example, it can be used to:

Style the first letter, or line, of an element
Insert content before, or after, the content of an element
Syntax
The syntax of pseudo-elements:

selector::pseudo-element {
  property: value;
} */

div.ele1::first-letter
{
color:#FF00FF;
font-size: xx-large;
}

pre.line1::first-line
{
    color:orange;
    background-color: rgb(10, 143, 143);
}

pre p.mid-change::content
{
    color:yellow;
    background-color: #FF0000;
}

pre p
{
    display:inline;
}

label.imp::after
{
content:"*";
color:red;
}

label.imp1::before
{
content:"*";
color:#0000FF;
}

span.baby::selection
{
    color:red;
    background-color: yellow;
}